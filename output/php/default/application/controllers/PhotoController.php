<?php
/**
 * Bender
 *
 * Our Simple Models
 *
 * @category   Application
 * @package    Application_Controllers
 * @copyright  Copyright (c) 2008-2010 Bender Modeler (http://www.ctrl-zetta.com/#code)
 * @author     <zetta> <chentepixtol>, $LastChangedBy$
 * @version    1.0.0 SVN: $Id$
 */

/**
 * PhotoController (CRUD for the Photo Objects)
 *
 * @category   Project
 * @package    Project_Controllers
 * @copyright  Copyright (c) 2008-2010 Bender Modeler (http://www.ctrl-zetta.com/#code) 
 * @copyright  This File has been proudly generated by Bender (http://code.google.com/p/bender-modeler/). <chentepixtol> <zetta>
 * @author     <zetta> & <chentepixtol>
 * @version    1.0.0 SVN: $Revision$
 */
class PhotoController extends CrudController
{
    
    /**
     * alias for the list action
     */
    public function indexAction()
    {
        $this->_forward('list');
    }
    
    /**
     * List the objects Photo actives
     */
    public function listAction()
    {
        $this->view->photos = PhotoCatalog::getInstance()->getActives();
        $this->setTitle('List the Photo');
    }
    
    /**
     * delete an Photo
     */
    public function deleteAction()
    {
        $photoCatalog = PhotoCatalog::getInstance();
        $idPhoto = $this->getRequest()->getParam('idPhoto');
        $photo = $photoCatalog->getById($idPhoto);
        $photoCatalog->deactivate($photo);
        $this->setFlash('ok','Successfully removed the Photo');
        $this->_redirect('photo/list');
    }
    
    /**
     * Form for edit an Photo
     */
    public function editAction()
    {
        $photoCatalog = PhotoCatalog::getInstance();
        $idPhoto = $this->getRequest()->getParam('idPhoto');
        $photo = $photoCatalog->getById($idPhoto);
        $post = array(
            'id_photo' => $photo->getIdPhoto(),
            'id_user' => $photo->getIdUser(),
            'title' => $photo->getTitle(),
            'uri' => $photo->getUri(),
        );
        $this->view->post = $post;
        $this->setTitle('Edit Photo');
    }
    
    /**
     * Create an Photo
     */
    public function createAction()
    {   
        $photoCatalog = PhotoCatalog::getInstance();
        $idUser = utf8_decode($this->getRequest()->getParam('id_user'));
        $title = utf8_decode($this->getRequest()->getParam('title'));
        $uri = utf8_decode($this->getRequest()->getParam('uri'));
        $photo = PhotoFactory::create($idUser, $title, $uri);
        $photoCatalog->create($photo);  
        $this->view->setTpl('_row');
        $this->view->setLayoutFile(false);
        $this->view->photo = $photo;
    }
    
    /**
     * Update an Photo
     */
    public function updateAction()
    {
        $photoCatalog = PhotoCatalog::getInstance();
        $idPhoto = $this->getRequest()->getParam('idPhoto');
        $photo = $photoCatalog->getById($idPhoto);
        $photo->setIdUser($this->getRequest()->getParam('id_user'));
        $photo->setTitle($this->getRequest()->getParam('title'));
        $photo->setUri($this->getRequest()->getParam('uri'));
        $photoCatalog->update($photo);
        $this->setFlash('ok','Successfully edited the Photo');
        $this->_redirect('photo/list');
    }
    
}
