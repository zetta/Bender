<?php
/**
 * {$brandName}
 *
 * {$description}
 *
 * @category   Project
 * @package    Project_Models
 * @copyright  {$copyright}
 * @author     {$author}, $LastChangedBy$
 * @version    {$version} SVN: $Id$
 */
<block:useIncludes>

/**
 * {$Bean}
 */
require_once '{$modelFolder}/{$beanFolder}/{$Bean}.php';
</block:useIncludes>

/**
 * {$Factory} Class
 *
 * @category   Project
 * @package    Project_Models
 * @subpackage Project_Models_Factories
 * @copyright  {$copyright}
<block:benderSignature>
 * @copyright  {$benderSignature}
 * @author     zetta 
</block:benderSignature>
 * @version    {$version} SVN: $Revision$
 */
class {$Factory}
{
    /**
     * Instancia un nuevo objeto {$Bean}
   <block:firstPhpDoc>
     * @param {$firstPhpDoc.dataType} ${$firstPhpDoc.phpName} {$firstPhpDoc.comment}
   </block:firstPhpDoc>
     * @return {$Bean} $bean
     */
    public static function create{$Bean}({$firstParameters})
    {
        $new{$Bean} = new {$Bean}();
      <block:firstSetters>
        $new{$Bean}->{$firstSetters.setter}(${$firstSetters.phpName});
      </block:firstSetters>
        return $new{$Bean};
    }

    /**
     * Crea un objeto {$Bean} con parametros solo para uso de catalogos
   <block:secondPhpDoc>
     * @param {$secondPhpDoc.dataType} ${$secondPhpDoc.phpName} {$secondPhpDoc.comment}
   </block:secondPhpDoc>
     * @return {$Bean} {$bean}
     */
    public static function create{$Bean}Internal({$secondParameters})
    {
        $new{$Bean} = {$factory}::create{$Bean}({$secondParametersNotCasted});
      <block:hasPrimaryField>
        $new{$Bean}->{$primaryKeySetter}(${$primaryKeyPhpName});
      </block:hasPrimaryField>
        return $new{$Bean};
    }

} 
 
 
