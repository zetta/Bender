<?php 



class SluggableBehavior extends BehaviorObserver 
{
 
    private $object;
    private $catalog;
    private $source;
    private $target;
    
    
    public function SluggableBehavior($source, $target)
    {
        
    }   
    
    public function fireEvent(Catalog $catalog,$object, $event)
    {
        $this->catalog = $catalog;
        $this->object = $object;
        switch($event)
        {
            case Catalog::EVENT_CREATE:
                $this->setNewSlug();
            break;
        }
    }
    
    public function setNewSlug()
    {
        $criteria = new Criteria();
        //$criteria->add($target,);
    }
    
    
    public function getSlugString($str)
    {
        $str = strtolower(trim($str));
        $str = preg_replace('/[^a-z0-9-]/', '-', $str);
        $str = preg_replace('/-+/', "-", $str);
        return $str;
    }
    
    
}
